<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Found Objects]]></title>
  <link href="http://adonley.github.io/atom.xml" rel="self"/>
  <link href="http://adonley.github.io/"/>
  <updated>2013-05-30T04:52:07-07:00</updated>
  <id>http://adonley.github.io/</id>
  <author>
    <name><![CDATA[Andrew Donley]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A Breif Overview: Regular Expressions (in Linux)]]></title>
    <link href="http://adonley.github.io/blog/2013/05/29/a-breif-overview-regular-expressions-in-linux/"/>
    <updated>2013-05-29T16:09:00-07:00</updated>
    <id>http://adonley.github.io/blog/2013/05/29/a-breif-overview-regular-expressions-in-linux</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re like me, you learned regular expressions in Theory of Computation and quickly forgot about them. Regular expressions are a powerful tool on the command line and can save you copious amounts of time when searching for patterns.</p>

<p>A quick side note about regular expressions &ndash; they were first implemented by <a href="http://en.wikipedia.org/wiki/Ken_Thompson">Ken Tompson</a> in his editor QED. Later, he took this same idea and put it the linux editor <a href="http://en.wikipedia.org/wiki/Ed_(text_editor)">ed</a>. From this editor is where the linux command &lsquo;grep&rsquo; was born. &lsquo;g/re/p&rsquo; meant Global search for Regualr Expression and Print matching lines in &lsquo;ed&rsquo;.</p>

<p>There are two basic sets of regular expressions: basic and extended [these are both POSIX]. Most programs in linux use the basic regular expression type. Here&rsquo;s a list of some of the programs that use the basic format and extended format (taken from <a href="http://www.grymoire.com/Unix/Regular.html"><a href="http://www.grymoire.com/Unix/Regular.html">http://www.grymoire.com/Unix/Regular.html</a></a>)</p>

<div>
  <pre><code class='bash'>Basic: vi, sed, grep, csplit, dbx, dbxtool, more, ed, expr, lex, pg, nl, rdist
Extended: awk, nawk, egrep</code></pre>
</div>


<p>The main difference between basic and extended has to do with the way metacharacters are expressed.</p>

<div>
  <pre><code class='bash'></code></pre>
</div>


<p>Let&rsquo;s get into some basic examples and the difference between extended and basic will become clear.
&lsquo;^&rsquo; &ndash; Match epsilon (empty string) from the end of the line &#92; This was added in Extended Regular Expressions</p>

<div>
  <pre><code class='bash'></code></pre>
</div>


<p>&lsquo;$&rsquo; &ndash; Match epsilon (empty string) at the end of the line &#92; This was added in Extended Regular Expressions</p>

<div>
  <pre><code class='bash'></code></pre>
</div>


<p>&lsquo;.&rsquo; &ndash; Match any one character &#92; This was added in Extended Regular Expressions</p>

<div>
  <pre><code class='bash'></code></pre>
</div>


<p>&lsquo;[a-m]&rsquo; &ndash; Match any character a through m lowercase</p>

<div>
  <pre><code class='bash'></code></pre>
</div>


<p>&lsquo;[^a-m]&rsquo; &ndash; Match any character that is not a through m lowercase</p>

<div>
  <pre><code class='bash'></code></pre>
</div>


<p>? &ndash; Match one occurance of</p>

<div>
  <pre><code class='bash'></code></pre>
</div>


<p>* &ndash; Kleene Star [remember this?]. Match epsilon or arbitrarily many of preceding character or range.</p>

<div>
  <pre><code class='bash'></code></pre>
</div>


<p>+ &ndash; The preceding object will be matched one or more times.</p>

<div>
  <pre><code class='bash'></code></pre>
</div>


<p>x{n}</p>

<div>
  <pre><code class='bash'></code></pre>
</div>


<p>x{n,}</p>

<div>
  <pre><code class='bash'></code></pre>
</div>


<p>x{n,m}</p>

<div>
  <pre><code class='bash'></code></pre>
</div>


<p>&lsquo;|&rsquo;</p>

<div>
  <pre><code class='bash'></code></pre>
</div>




<hr>


<p>For more information visit:<br>
<a href="http://www.ibm.com/developerworks/aix/library/au-speakingunix9/"><a href="http://www.ibm.com/developerworks/aix/library/au-speakingunix9/">http://www.ibm.com/developerworks/aix/library/au-speakingunix9/</a></a><br>
<a href="http://en.wikipedia.org/wiki/Regular_expression"><a href="http://en.wikipedia.org/wiki/Regular_expression">http://en.wikipedia.org/wiki/Regular_expression</a></a><br>
<a href="http://www.regular-expressions.info/posix.html"><a href="http://www.regular-expressions.info/posix.html">http://www.regular-expressions.info/posix.html</a></a><br>
And finally, always consult your man pages when in doubt. There are some good instructions in the man pages for grep, especially about the differences between basic and extended regular expressions.</p>
]]></content>
  </entry>
  
</feed>
